keyword class
identifier Main
symbol {
keyword function
keyword void
identifier main
symbol (
symbol )
symbol {
keyword var
identifier Array
identifier a
symbol ;
keyword var
keyword int
identifier length
symbol ;
keyword var
keyword int
identifier i
symbol ,
identifier sum
symbol ;
keyword let
identifier length
symbol =
identifier Keyboard
symbol .
identifier readInt
symbol (
stringConstant How many numbers? 
symbol )
symbol ;
keyword let
identifier a
symbol =
identifier Array
symbol .
identifier new
symbol (
identifier length
symbol )
symbol ;
keyword let
identifier i
symbol =
integerConstant 0
symbol ;
keyword while
symbol (
identifier i
symbol <
identifier length
symbol )
symbol {
keyword let
identifier a
symbol [
identifier i
symbol ]
symbol =
identifier Keyboard
symbol .
identifier readInt
symbol (
stringConstant Enter the next number: 
symbol )
symbol ;
keyword let
identifier i
symbol =
identifier i
symbol +
integerConstant 1
symbol ;
symbol }
keyword let
identifier i
symbol =
integerConstant 0
symbol ;
keyword let
identifier sum
symbol =
integerConstant 0
symbol ;
keyword while
symbol (
identifier i
symbol <
identifier length
symbol )
symbol {
keyword let
identifier sum
symbol =
identifier sum
symbol +
identifier a
symbol [
identifier i
symbol ]
symbol ;
keyword let
identifier i
symbol =
identifier i
symbol +
integerConstant 1
symbol ;
symbol }
keyword do
identifier Output
symbol .
identifier printString
symbol (
stringConstant The average is: 
symbol )
symbol ;
keyword do
identifier Output
symbol .
identifier printInt
symbol (
identifier sum
symbol /
identifier length
symbol )
symbol ;
keyword do
identifier Output
symbol .
identifier println
symbol (
symbol )
symbol ;
keyword return
symbol ;
symbol }
symbol }
