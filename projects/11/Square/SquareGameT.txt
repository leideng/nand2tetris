keyword class
identifier SquareGame
symbol {
keyword field
identifier Square
identifier square
symbol ;
keyword field
keyword int
identifier direction
symbol ;
keyword constructor
identifier SquareGame
identifier new
symbol (
symbol )
symbol {
keyword let
identifier square
symbol =
identifier Square
symbol .
identifier new
symbol (
integerConstant 0
symbol ,
integerConstant 0
symbol ,
integerConstant 30
symbol )
symbol ;
keyword let
identifier direction
symbol =
integerConstant 0
symbol ;
keyword return
keyword this
symbol ;
symbol }
keyword method
keyword void
identifier dispose
symbol (
symbol )
symbol {
keyword do
identifier square
symbol .
identifier dispose
symbol (
symbol )
symbol ;
keyword do
identifier Memory
symbol .
identifier deAlloc
symbol (
keyword this
symbol )
symbol ;
keyword return
symbol ;
symbol }
keyword method
keyword void
identifier run
symbol (
symbol )
symbol {
keyword var
keyword char
identifier key
symbol ;
keyword var
keyword boolean
identifier exit
symbol ;
keyword let
identifier exit
symbol =
keyword false
symbol ;
keyword while
symbol (
symbol ~
identifier exit
symbol )
symbol {
keyword while
symbol (
identifier key
symbol =
integerConstant 0
symbol )
symbol {
keyword let
identifier key
symbol =
identifier Keyboard
symbol .
identifier keyPressed
symbol (
symbol )
symbol ;
keyword do
identifier moveSquare
symbol (
symbol )
symbol ;
symbol }
keyword if
symbol (
identifier key
symbol =
integerConstant 81
symbol )
symbol {
keyword let
identifier exit
symbol =
keyword true
symbol ;
symbol }
keyword if
symbol (
identifier key
symbol =
integerConstant 90
symbol )
symbol {
keyword do
identifier square
symbol .
identifier decSize
symbol (
symbol )
symbol ;
symbol }
keyword if
symbol (
identifier key
symbol =
integerConstant 88
symbol )
symbol {
keyword do
identifier square
symbol .
identifier incSize
symbol (
symbol )
symbol ;
symbol }
keyword if
symbol (
identifier key
symbol =
integerConstant 131
symbol )
symbol {
keyword let
identifier direction
symbol =
integerConstant 1
symbol ;
symbol }
keyword if
symbol (
identifier key
symbol =
integerConstant 133
symbol )
symbol {
keyword let
identifier direction
symbol =
integerConstant 2
symbol ;
symbol }
keyword if
symbol (
identifier key
symbol =
integerConstant 130
symbol )
symbol {
keyword let
identifier direction
symbol =
integerConstant 3
symbol ;
symbol }
keyword if
symbol (
identifier key
symbol =
integerConstant 132
symbol )
symbol {
keyword let
identifier direction
symbol =
integerConstant 4
symbol ;
symbol }
keyword while
symbol (
symbol ~
symbol (
identifier key
symbol =
integerConstant 0
symbol )
symbol )
symbol {
keyword let
identifier key
symbol =
identifier Keyboard
symbol .
identifier keyPressed
symbol (
symbol )
symbol ;
keyword do
identifier moveSquare
symbol (
symbol )
symbol ;
symbol }
symbol }
keyword return
symbol ;
symbol }
keyword method
keyword void
identifier moveSquare
symbol (
symbol )
symbol {
keyword if
symbol (
identifier direction
symbol =
integerConstant 1
symbol )
symbol {
keyword do
identifier square
symbol .
identifier moveUp
symbol (
symbol )
symbol ;
symbol }
keyword if
symbol (
identifier direction
symbol =
integerConstant 2
symbol )
symbol {
keyword do
identifier square
symbol .
identifier moveDown
symbol (
symbol )
symbol ;
symbol }
keyword if
symbol (
identifier direction
symbol =
integerConstant 3
symbol )
symbol {
keyword do
identifier square
symbol .
identifier moveLeft
symbol (
symbol )
symbol ;
symbol }
keyword if
symbol (
identifier direction
symbol =
integerConstant 4
symbol )
symbol {
keyword do
identifier square
symbol .
identifier moveRight
symbol (
symbol )
symbol ;
symbol }
keyword do
identifier Sys
symbol .
identifier wait
symbol (
integerConstant 5
symbol )
symbol ;
keyword return
symbol ;
symbol }
symbol }
