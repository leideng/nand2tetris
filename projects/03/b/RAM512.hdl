// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    RAM64(in=in0,load=load0,address=address[3..8],out=out0);
    RAM64(in=in1,load=load1,address=address[3..8],out=out1);
    RAM64(in=in2,load=load2,address=address[3..8],out=out2);
    RAM64(in=in3,load=load3,address=address[3..8],out=out3);
    RAM64(in=in4,load=load4,address=address[3..8],out=out4);
    RAM64(in=in5,load=load5,address=address[3..8],out=out5);
    RAM64(in=in6,load=load6,address=address[3..8],out=out6);
    RAM64(in=in7,load=load7,address=address[3..8],out=out7);
    DMux8Way16(in=in,sel=address[0..2],a=in0,b=in1,c=in2,d=in3,e=in4,f=in5,g=in6,h=in7);
    DMux8Way(in=load,sel=address[0..2],a=load0,b=load1,c=load2,d=load3,e=load4,f=load5,g=load6,h=load7);
    Mux8Way16(a=out0,b=out1,c=out2,d=out3,e=out4,f=out5,g=out6,h=out7,sel=address[0..2],out=out);
}