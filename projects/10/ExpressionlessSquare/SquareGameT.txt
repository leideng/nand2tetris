keyword class
identifier SquareGame
symbol {
keyword field
identifier Square
identifier square
symbol ;
keyword field
keyword int
identifier direction
symbol ;
keyword constructor
identifier SquareGame
identifier new
symbol (
symbol )
symbol {
keyword let
identifier square
symbol =
identifier square
symbol ;
keyword let
identifier direction
symbol =
identifier direction
symbol ;
keyword return
identifier square
symbol ;
symbol }
keyword method
keyword void
identifier dispose
symbol (
symbol )
symbol {
keyword do
identifier square
symbol .
identifier dispose
symbol (
symbol )
symbol ;
keyword do
identifier Memory
symbol .
identifier deAlloc
symbol (
identifier square
symbol )
symbol ;
keyword return
symbol ;
symbol }
keyword method
keyword void
identifier run
symbol (
symbol )
symbol {
keyword var
keyword char
identifier key
symbol ;
keyword var
keyword boolean
identifier exit
symbol ;
keyword let
identifier exit
symbol =
identifier key
symbol ;
keyword while
symbol (
identifier exit
symbol )
symbol {
keyword while
symbol (
identifier key
symbol )
symbol {
keyword let
identifier key
symbol =
identifier key
symbol ;
keyword do
identifier moveSquare
symbol (
symbol )
symbol ;
symbol }
keyword if
symbol (
identifier key
symbol )
symbol {
keyword let
identifier exit
symbol =
identifier exit
symbol ;
symbol }
keyword if
symbol (
identifier key
symbol )
symbol {
keyword do
identifier square
symbol .
identifier decSize
symbol (
symbol )
symbol ;
symbol }
keyword if
symbol (
identifier key
symbol )
symbol {
keyword do
identifier square
symbol .
identifier incSize
symbol (
symbol )
symbol ;
symbol }
keyword if
symbol (
identifier key
symbol )
symbol {
keyword let
identifier direction
symbol =
identifier exit
symbol ;
symbol }
keyword if
symbol (
identifier key
symbol )
symbol {
keyword let
identifier direction
symbol =
identifier key
symbol ;
symbol }
keyword if
symbol (
identifier key
symbol )
symbol {
keyword let
identifier direction
symbol =
identifier square
symbol ;
symbol }
keyword if
symbol (
identifier key
symbol )
symbol {
keyword let
identifier direction
symbol =
identifier direction
symbol ;
symbol }
keyword while
symbol (
identifier key
symbol )
symbol {
keyword let
identifier key
symbol =
identifier key
symbol ;
keyword do
identifier moveSquare
symbol (
symbol )
symbol ;
symbol }
symbol }
keyword return
symbol ;
symbol }
keyword method
keyword void
identifier moveSquare
symbol (
symbol )
symbol {
keyword if
symbol (
identifier direction
symbol )
symbol {
keyword do
identifier square
symbol .
identifier moveUp
symbol (
symbol )
symbol ;
symbol }
keyword if
symbol (
identifier direction
symbol )
symbol {
keyword do
identifier square
symbol .
identifier moveDown
symbol (
symbol )
symbol ;
symbol }
keyword if
symbol (
identifier direction
symbol )
symbol {
keyword do
identifier square
symbol .
identifier moveLeft
symbol (
symbol )
symbol ;
symbol }
keyword if
symbol (
identifier direction
symbol )
symbol {
keyword do
identifier square
symbol .
identifier moveRight
symbol (
symbol )
symbol ;
symbol }
keyword do
identifier Sys
symbol .
identifier wait
symbol (
identifier direction
symbol )
symbol ;
keyword return
symbol ;
symbol }
symbol }
